@model TaskManagementSystem_WebApplication.Models.Reports

@{
    ViewBag.Title = "CreateReport";
    Layout = "~/Views/Shared/AdminPage_Layout.cshtml";
}
<div class="formcontainer">
    <h2>Create report</h2>

    @using (Html.BeginForm("CreateReport", "AdminPage", FormMethod.Post, new { enctype = "multipart/form-data" , @onsubmit = "return validateReportForm()" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.Label("Task Id", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.TaskID,
                                            new SelectList(ViewBag.Projects, "TaskID", "TaskTitle"),
                                            "Select Task",
                                            new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TaskID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReportName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReportName, new { htmlAttributes = new { @class = "form-control", id = "name", oninput = "validateName()" } })
                    @Html.ValidationMessageFor(model => model.ReportName, "", new { @class = "text-danger" })
                    <span class="errors" id="nameError"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GeneratedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GeneratedOn, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control", @type = "date", id = "GeneratedOn" } })
                    @Html.ValidationMessageFor(model => model.GeneratedOn, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReportData, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReportData, new { htmlAttributes = new { @class = "form-control", id = "description", oninput = "validateDescription()" } })
                    @Html.ValidationMessageFor(model => model.ReportData, "", new { @class = "text-danger" })
                    <span class="errors" id="DescriptionError"></span>

                </div>
            </div>

            <div class="form-group">
                @Html.Label("Upload Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ReportImageFile" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>